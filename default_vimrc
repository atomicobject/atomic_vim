:set guifont=Monaco:h12
:set guioptions-=T
let mapleader=","

set nocompatible
set number
set grepprg=ack
set grepformat=%f:%l:%m
set bs=2
set softtabstop=2
set shiftwidth=2
set tabstop=2
set expandtab
set smarttab
set autoindent
set smartindent
set number
set incsearch
set nohlsearch
set ignorecase
set smartcase
set nowrap
set hidden
set wildmode=longest,list,full
set wildmenu

colorscheme vividchalk
syntax on
filetype on
filetype plugin on
compiler ruby

" close the current buffer, doesn't close the window
:noremap <leader>w :Bclose<cr>
" close the current window, doesn't close the buffer
:noremap <leader>q :close<cr>

" Find in cwd/"project"
:noremap <leader>f :Ack 

" Run the current file. Uses .vim/ruby/run_file.rb
:noremap <leader>r :RunFile<cr>

" Textmate CMD-t emulation
let g:fuzzy_enumerating_limit = 20
map <leader>t :FuzzyFinderTextMate<CR>
map <leader>T :FuzzyFinderTextMateRefreshFiles<CR>:FuzzyFinderTextMate<CR>

" bring up buffer list. ,,<CR> switches to last used buffer
map <leader>, :FuzzyFinderBuffer<CR>

" like browse to a file with a convenient ,t-like interface
map <leader>e :FuzzyFinderFile<CR>

" comment out a line
map <leader>/ :TComment<Return>

" used to set the clipboard buffer to system clipboard
map <leader>c "*

" autocmd FileType ruby,eruby set omnifunc=rubycomplete ai sw=2 sts=2 et
if has("autocmd")
  filetype indent on
endif

" load .vim in the current directory if it exists
if filereadable(".vim")
  source .vim
endif

"gist
let g:gist_clip_command = 'pbcopy'
let g:gist_detect_filetype = 1
